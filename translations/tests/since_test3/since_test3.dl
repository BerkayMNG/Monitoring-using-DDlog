/*
Testing of SINCE operator where the intervall is [0,0]. The concrete Formula:

P(x) SINCE[0,0] Q(x)

*/

input stream Timestamp(tp:s32, ts:s32)
input stream P(tp:s32, id:s32)
input stream Q(tp:s32, id:s32)
relation Intervall(min:s32, max:s32)
Intervall(0,10) :- .


relation Data_prev(ap:s32, tp:s32, ts:s32, id:s32)
relation Data_in(ap:s32, tp:s32, ts:s32, id:s32)
relation Tuple_in(ap:s32, tp:s32, ts:s32, id:s32)
relation Tuple_since(ap:s32, tp:s32, ts:s32, id:s32)

output relation Satisfied(ap:s32, ts:s32, id:s32)

Data_prev(tp_new,tp_old,ts_old,id) :- Timestamp'(tp_new,ts_new), Timestamp'(tp_old,ts_old), Q'(tp_old,id), Intervall(min,max),
                                        ts_new - ts_old < min, tp_old <= tp_new.
Data_prev(tp_new,tp_old,ts_old,id) :- Data_prev-1(ap_old, tp_old,ts_old,id), Timestamp'(tp_new,ts_new), Intervall(min,max),
                                        ts_new - ts_old < min, tp_old <= tp_new.



Data_in(tp,tp,ts,id) :- Timestamp'(tp,ts), Q'(tp,id), Intervall(min,max),
                            min == 0.
Data_in(tp_new,tp_old,ts_old,id) :- Data_prev(ap_old,tp_old,ts_old,id), Timestamp'(tp_new,ts_new), Intervall(min,max),
                                        ts_new - ts_old <= max, ts_new-ts_old >= min, ap_old <= tp_new.
Data_in(tp_new, tp_old,ts_old,id) :- Data_prev-1(ap_old, tp_old,ts_old,id), Timestamp'(tp_new,ts_new), Intervall(min,max),
                                        ts_new - ts_old <= max, ts_new-ts_old >= min, ap_old <= tp_new.
Data_in(tp_new, tp_old,ts_old,id) :- Data_in-1(ap_old, tp_old,ts_old,id), Timestamp'(tp_new,ts_new), Intervall(min,max),
                                        ts_new - ts_old <= max, ts_new-ts_old >= min, ap_old <= tp_new.
Data_in(tp_new, tp_old,ts_old,id) :- Timestamp'(tp_new,ts_new), Data_in(ap_old, tp_old,ts_old,id), Intervall(min,max),
                                        ts_new - ts_old <= max, ts_new-ts_old >= min, ap_old == tp_new-1.


Tuple_since(ap,tp,ts,id) :- Tuple_since-1(ap,tp,ts,id), Timestamp'(tp_new,ts_new), 
                                Intervall(min,max), ts_new - ts <= max, tp_new -1 == ap.
Tuple_since(tp,tp,ts,id) :- Timestamp'(tp,ts), Q'(tp,id), not P'(tp,id).
Tuple_since(tp_new,tp_old,ts_old,id) :- Timestamp'(tp_new, ts_new), P'(tp_new,id),Tuple_since(tp_new-1,tp_old,ts_old,id),
                                        Intervall(min,max), ts_new-ts_old <= max.


Tuple_in(ap,tp,ts,id) :- Data_in(ap,tp,ts,id), Tuple_since(ap, tp,ts,id).
Satisfied(ap,ts_new,id) :- Satisfied-1(ap,ts_new,id).
Satisfied(ap,ts_new,id) :- Tuple_in(ap,tp,ts,id), Timestamp'(ap,ts_new).

